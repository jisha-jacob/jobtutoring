{"version":3,"sources":["axios.js","components/Courses/Courses.js","containers/JobDesc/JobDesc.js","components/Header/Header.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","courses","props","courseOutput","show","coursesChosen","length","map","ig","style","textTransform","display","margin","border","padding","name","href","link","target","rel","JobDesc","state","jobDescValue","linkDisabled","showCourses","hasError","findCoursesHandler","e","preventDefault","alert","course","Object","keys","description","toLowerCase","c","skill","match","push","setState","jobDescHandler","jobDesc","value","get","then","response","data","catch","error","Fragment","className","placeholder","this","onChange","onClick","pointerEvents","background","Courses","Component","header","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3c19417.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance=axios.create({\r\n    baseURL:'https://job-tutor-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\n\r\nconst courses =(props)=>{\r\n    let courseOutput=null;\r\n\r\n    if(props.show){\r\n        if(props.coursesChosen.length!==0){\r\n            courseOutput = props.coursesChosen.map(ig => {\r\n               return <span style={{\r\n                   textTransform: 'capitalize',\r\n                   display: 'block',\r\n                   margin: '0 8px',\r\n                   border: '1px solid #ccc',\r\n                   padding: '10px'\r\n               }}\r\n                   key={ig.name}><strong>{ig.name} : </strong> <a href={ig.link} target=\"_blank\" rel=\"noreferrer\">{ig.link}</a></span>\r\n           });\r\n       }\r\n       else{\r\n           courseOutput=<p>Sorry!:( No relevant courses found in our database.</p>\r\n       }\r\n\r\n    }    \r\n   \r\n    \r\n    return(\r\n        <div>\r\n            {courseOutput}\r\n        </div>\r\n      \r\n    )\r\n};\r\n\r\nexport default courses;","import React, { Component } from 'react';\r\nimport axios from '../../axios';\r\nimport Courses from '../../components/Courses/Courses';\r\nimport './JobDesc.css';\r\n\r\n\r\nclass JobDesc extends Component {\r\n\r\n    state = {\r\n        jobDescValue: '',\r\n        courses: null,\r\n        coursesChosen: null,\r\n        linkDisabled: true,\r\n        showCourses:false,\r\n        hasError: false\r\n    }\r\n    \r\n    //get all course details from db\r\n    componentDidMount() {\r\n        axios.get('/courses.json')\r\n            .then(response => {\r\n                this.setState({ courses: response.data });\r\n                //console.log(this.state.courses);\r\n            })\r\n            .catch(error => { this.setState({ hasError: true }) });\r\n    }\r\n\r\n\r\n    //Handler to match courses in the job description and set state\r\n    findCoursesHandler = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.hasError) {\r\n            alert(\"Network Error! Please try agin later.\");\r\n            return false;\r\n        }\r\n        const courses = this.state.courses;\r\n        const course = Object.keys(courses);\r\n        const description = this.state.jobDescValue.toLowerCase();\r\n        const coursesChosen = [];\r\n        //console.log(course);\r\n        for (var c = 0; c < course.length; c++) {\r\n            var skill = course[c].toLowerCase();\r\n            skill = \"\\\\b\" +skill+ \"\\\\b\";\r\n           //console.log(skill);\r\n            //console.log(description.match(skill));\r\n            if (description.match(skill) !==null) {\r\n                coursesChosen.push({ name: course[c], link: courses[course[c]]});\r\n            }\r\n        }\r\n        // console.log(coursesChosen);\r\n        this.setState({ coursesChosen: coursesChosen });\r\n        this.setState({ showCourses: true });\r\n    }\r\n\r\n    //Change event handler for job Description text area\r\n    jobDescHandler=(e)=>{\r\n        e.preventDefault();\r\n        let jobDesc=e.target.value;\r\n        this.setState({ jobDescValue: jobDesc }) ;\r\n\r\n        // Button should be enbaled on non empty job Description value\r\n        if (jobDesc.length !== 0) {\r\n            this.setState({ linkDisabled: false });  \r\n        } \r\n        \r\n        // Button should be disabled and no Course output when Job Description is empty\r\n        if (jobDesc.length === 0) {\r\n            this.setState({ linkDisabled: true });  \r\n            this.setState({ showCourses: false });\r\n        } \r\n    }\r\n\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"Main\">\r\n                   \r\n                    <div className=\"JobDesc\">\r\n                        <textarea placeholder=\"Paste job description here.\" value={this.state.jobDescValue} onChange={this.jobDescHandler}></textarea>\r\n                        <a href='/'  onClick={this.findCoursesHandler} style={this.state.linkDisabled ? { pointerEvents: \"none\", background: \"#808080\" } : null}>\r\n                            <span>Find Courses</span></a>\r\n                    </div>\r\n\r\n                    <div className=\"CourseOutput\">\r\n                        {/* {courseOutput} */}\r\n                        <Courses show={this.state.showCourses} coursesChosen={this.state.coursesChosen} />\r\n                    </div>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default JobDesc;","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst header =()=>(\r\n    <div className=\"Header\">\r\n        <h2>Job Tutor</h2>\r\n        <h4>Refresh your skills before that INTERVIEW.</h4>\r\n        <h5>Paste your job description below and follow links to refresh your skills and ace the interview!</h5>\r\n        <h6>*Currently supports software developer roles*</h6>\r\n    </div>\r\n\r\n);\r\n\r\nexport default header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => (\r\n    <footer className=\"Footer\">\r\n      <p>&copy; Created and Developed by <strong><a href=\"https://www.linkedin.com/in/jishjacob/\" target=\"_blank\" rel=\"noreferrer\">Jisha Jacob</a></strong></p>\r\n      <p>Idea Credit: <a \r\n      href='https://www.readthegeneralist.com/briefing/rfs-025#toc-job-interview-tutoring-'\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\">The Generalist</a></p>\r\n    </footer>\r\n  );\r\n\r\n  export default Footer;\r\n","import JobDesc from '../src/containers/JobDesc/JobDesc';\r\nimport Header from '../src/components/Header/Header';\r\nimport './App.css';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">      \r\n      <Header/>\r\n      <JobDesc/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter><App /></BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}